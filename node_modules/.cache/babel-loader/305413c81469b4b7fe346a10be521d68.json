{"ast":null,"code":"var _jsxFileName = \"/Users/indupoudel/Documents/00-Web Development Projects/REACT/local-breweries/src/components/BreweryMap.js\";\nimport React from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react'; // const AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nconst mapStyles = {\n  width: '100%',\n  height: '80%'\n};\nexport class BreweryMap extends React.Component {\n  constructor(_props) {\n    super(_props); // this.initialCenter = {\n    //     lat: 40.2732,\n    //     lng: 76.8867\n    //   };\n\n    this.onMarkerOver = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.displayMarker = () => {\n      marker = this.state.activeMarker; //position={{ lat: breweryLat, lng:breweryLng }}\n\n      onMouseover = this.onMarkerOver;\n      name = this.props.brewery[\"name\"];\n    };\n\n    this.zoom = 11;\n    this.state = {\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n\n    };\n  }\n\n  render() {\n    let breweryLat = this.props.brewery[\"latitude\"];\n    let breweryLng = this.props.brewery[\"longitude\"];\n    let breweryName = this.props.brewery[\"name\"];\n    return React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: mapStyles //initialCenter={{ lat: 47.444, lng: -122.176}}\n      //initialCenter={this.props.initialCenter}\n      // lat={breweryLat}\n      //lng={breweryLng}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" \", this.displayMarker());\n  }\n\n} //export default BreweryMap;\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyA-7d1-o3I4_FPxDYGOM6OAmON9zPdaZ-Q '\n})(BreweryMap);","map":{"version":3,"sources":["/Users/indupoudel/Documents/00-Web Development Projects/REACT/local-breweries/src/components/BreweryMap.js"],"names":["React","Map","GoogleApiWrapper","InfoWindow","Marker","mapStyles","width","height","BreweryMap","Component","constructor","props","onMarkerOver","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","displayMarker","onMouseover","name","brewery","zoom","render","breweryLat","breweryLng","breweryName","google","apiKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,UAAhC,EAA4CC,MAA5C,QAA0D,mBAA1D,C,CAEA;;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,MADO;AAEdC,EAAAA,MAAM,EAAE;AAFM,CAAlB;AAIA,OAAO,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAwC;AAC3CC,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,UAAMA,MAAN,EADe,CAEf;AACA;AACA;AACA;;AALe,SAcnBC,YAdmB,GAcJ,CAACD,KAAD,EAAQE,MAAR,EAAgBC,CAAhB,KACf,KAAKC,QAAL,CAAc;AACZC,MAAAA,aAAa,EAAEL,KADH;AAEZM,MAAAA,YAAY,EAAEJ,MAFF;AAGZK,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CAfmB;;AAAA,SAqBrBC,OArBqB,GAqBXR,KAAK,IAAI;AACjB,UAAI,KAAKS,KAAL,CAAWF,iBAAf,EAAkC;AAChC,aAAKH,QAAL,CAAc;AACZG,UAAAA,iBAAiB,EAAE,KADP;AAEZD,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KA5BoB;;AAAA,SA8BrBI,aA9BqB,GA8BL,MAAM;AACpBR,MAAAA,MAAM,GAAC,KAAKO,KAAL,CAAWH,YAAlB,CADoB,CAEpB;;AACAK,MAAAA,WAAW,GAAC,KAAKV,YAAjB;AACAW,MAAAA,IAAI,GAAC,KAAKZ,KAAL,CAAWa,OAAX,CAAmB,MAAnB,CAAL;AACD,KAnCoB;;AAMf,SAAKC,IAAL,GAAW,EAAX;AACA,SAAKL,KAAL,GAAa;AACTF,MAAAA,iBAAiB,EAAE,KADV;AACkB;AAC3BD,MAAAA,YAAY,EAAE,EAFL;AAEkB;AAC3BD,MAAAA,aAAa,EAAE,EAHN,CAGkB;;AAHlB,KAAb;AAKH;;AA0BDU,EAAAA,MAAM,GAAG;AAEL,QAAIC,UAAU,GAAE,KAAKhB,KAAL,CAAWa,OAAX,CAAmB,UAAnB,CAAhB;AACA,QAAII,UAAU,GAAE,KAAKjB,KAAL,CAAWa,OAAX,CAAmB,WAAnB,CAAhB;AACA,QAAIK,WAAW,GAAE,KAAKlB,KAAL,CAAWa,OAAX,CAAmB,MAAnB,CAAjB;AAEA,WACI,oBAAC,GAAD;AACA,MAAA,MAAM,EAAE,KAAKb,KAAL,CAAWmB,MADnB;AAEA,MAAA,IAAI,EAAE,CAFN;AAGA,MAAA,KAAK,EAAEzB,SAHP,CAIA;AACA;AACD;AACC;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAQG,KAAKgB,aAAL,EARH,CADJ;AAsBH;;AAnE0C,C,CAqE/C;;AAEA,eAAenB,gBAAgB,CAAC;AAC5B6B,EAAAA,MAAM,EAAE;AADoB,CAAD,CAAhB,CAEVvB,UAFU,CAAf","sourcesContent":["import React from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\n\n// const AnyReactComponent = ({ text }) => <div>{text}</div>;\nconst mapStyles = {\n    width: '100%',\n    height: '80%',\n  };\nexport class BreweryMap extends React.Component{\n    constructor(props) {\n        super(props);\n        // this.initialCenter = {\n        //     lat: 40.2732,\n        //     lng: 76.8867\n        //   };\n        this.zoom= 11;\n        this.state = {\n            showingInfoWindow: false,  //Hides or the shows the infoWindow\n            activeMarker: {},          //Shows the active marker upon click\n            selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n          };\n    }\n\n    onMarkerOver = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  displayMarker = () => {\n    marker=this.state.activeMarker\n    //position={{ lat: breweryLat, lng:breweryLng }}\n    onMouseover=this.onMarkerOver\n    name=this.props.brewery[\"name\"]\n  }\n\n\n    render() {\n\n        let breweryLat= this.props.brewery[\"latitude\"];\n        let breweryLng= this.props.brewery[\"longitude\"];\n        let breweryName= this.props.brewery[\"name\"];\n\n        return(\n            <Map\n            google={this.props.google}\n            zoom={8}\n            style={mapStyles}\n            //initialCenter={{ lat: 47.444, lng: -122.176}}\n            //initialCenter={this.props.initialCenter}\n           // lat={breweryLat}\n            //lng={breweryLng}\n            > {this.displayMarker()}\n           {/* <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n        \n        <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow> */}\n            </Map>\n        );\n    }\n}\n//export default BreweryMap;\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyA-7d1-o3I4_FPxDYGOM6OAmON9zPdaZ-Q '\n  })(BreweryMap);"]},"metadata":{},"sourceType":"module"}