{"ast":null,"code":"var _jsxFileName = \"/Users/indupoudel/Documents/00-Web Development Projects/REACT/local-breweries/src/components/FetchOpenBreweryAPI.js\";\nimport React from 'react';\n\nclass FetchOpenBreweryAPI extends React.Component() {\n  async componentDidMount() {\n    const url = \"https://api.openbrewerydb.org/breweries/\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      brewery: data,\n      loading: false\n    });\n  }\n\n  renderTableData() {\n    return this.state.brewery.map((brewery, index) => {\n      const id = brewery.id,\n            name = brewery.name,\n            brewery_type = brewery.brewery_type,\n            street = brewery.street,\n            city = brewery.city,\n            state = brewery.state,\n            postal_code = brewery.postal_code,\n            website_url = brewery.website_url; //destructuring\n\n      return React.createElement(\"tr\", {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, brewery_type), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, street, \" \", city, \" \", state, \" \", postal_code), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, website_url));\n    });\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.brewery[0]); //const { id, name, brewery_type, website_url } = header ;//destructuring\n\n    return header.map((key, index) => {\n      return React.createElement(\"th\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  }\n\n  renderbreweryAddress() {}\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"loading\");\n    }\n\n    if (!this.state.brewery) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"No data\");\n    }\n\n    return React.createElement(\"table\", {\n      id: \"brewery\",\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.renderTableHeader())), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.renderTableData()));\n  }\n\n}\n\nexport default FetchOpenBreweryAPI;","map":{"version":3,"sources":["/Users/indupoudel/Documents/00-Web Development Projects/REACT/local-breweries/src/components/FetchOpenBreweryAPI.js"],"names":["React","FetchOpenBreweryAPI","Component","componentDidMount","url","response","fetch","data","json","setState","brewery","loading","renderTableData","state","map","index","id","name","brewery_type","street","city","postal_code","website_url","renderTableHeader","header","Object","keys","key","toUpperCase","renderbreweryAddress","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,mBAAN,SAAkCD,KAAK,CAACE,SAAN,EAAlC,CAAoD;AAIpD,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,GAAG,GAAG,0CAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAEF,GAAF,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAACC,MAAAA,OAAO,EAAEH,IAAV;AAAgBI,MAAAA,OAAO,EAAE;AAAzB,KAAd;AACH;;AAEDC,EAAAA,eAAe,GAAG;AAChB,WAAO,KAAKC,KAAL,CAAWH,OAAX,CAAmBI,GAAnB,CAAuB,CAACJ,OAAD,EAAUK,KAAV,KAAoB;AAAA,YACvCC,EADuC,GACmCN,OADnC,CACvCM,EADuC;AAAA,YACnCC,IADmC,GACmCP,OADnC,CACnCO,IADmC;AAAA,YAC7BC,YAD6B,GACmCR,OADnC,CAC7BQ,YAD6B;AAAA,YACfC,MADe,GACmCT,OADnC,CACfS,MADe;AAAA,YACPC,IADO,GACmCV,OADnC,CACPU,IADO;AAAA,YACDP,KADC,GACmCH,OADnC,CACDG,KADC;AAAA,YACMQ,WADN,GACmCX,OADnC,CACMW,WADN;AAAA,YACmBC,WADnB,GACmCZ,OADnC,CACmBY,WADnB,EAC4C;;AAC3F,aACG;AAAI,QAAA,GAAG,EAAEN,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,EAAL,CADH,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,IAAL,CAFH,EAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,YAAL,CAHH,EAIG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,MAAL,OAAcC,IAAd,OAAqBP,KAArB,OAA6BQ,WAA7B,CAJH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,WAAL,CALH,CADH;AAUF,KAZM,CAAP;AAaD;;AAEDC,EAAAA,iBAAiB,GAAG;AACjB,QAAIC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKb,KAAL,CAAWH,OAAX,CAAmB,CAAnB,CAAZ,CAAb,CADiB,CAEjB;;AACA,WAAOc,MAAM,CAACV,GAAP,CAAW,CAACa,GAAD,EAAMZ,KAAN,KAAgB;AAC9B,aAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBY,GAAG,CAACC,WAAJ,EAAjB,CAAP;AACH,KAFM,CAAP;AAGF;;AACDC,EAAAA,oBAAoB,GAAG,CAEtB;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKjB,KAAL,CAAWF,OAAf,EAAwB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACH;;AAED,QAAI,CAAC,KAAKE,KAAL,CAAWH,OAAhB,EAAyB;AACrB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACH;;AACD,WACQ;AAAO,MAAA,EAAE,EAAC,SAAV;AAAoB,MAAA,SAAS,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKa,iBAAL,EAAL,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKX,eAAL,EADL,CAJJ,CADR;AAUH;;AAxDmD;;AA2DpD,eAAeX,mBAAf","sourcesContent":["import React from 'react';\n\nclass FetchOpenBreweryAPI extends React.Component() {\n\n \n\nasync componentDidMount() {\n    const url = \"https://api.openbrewerydb.org/breweries/\";\n    const response = await fetch (url);\n    const data = await response.json();\n    this.setState({brewery: data, loading: false });\n}\n\nrenderTableData() {\n  return this.state.brewery.map((brewery, index) => {\n     const { id, name, brewery_type, street, city, state, postal_code, website_url } = brewery; //destructuring\n     return (\n        <tr key={id}>\n           <td>{id}</td>\n           <td>{name}</td>\n           <td>{brewery_type}</td>\n           <td>{street} {city} {state} {postal_code}</td>\n           <td>{website_url}</td>\n        </tr>\n     )\n    \n  })\n}\n\nrenderTableHeader() {\n   let header = Object.keys(this.state.brewery[0])\n   //const { id, name, brewery_type, website_url } = header ;//destructuring\n   return header.map((key, index) => {\n       return <th key={index}>{key.toUpperCase()}</th>\n   })\n}\nrenderbreweryAddress() {\n\n}\n\nrender() {\n    if (this.state.loading) {\n        return <div>loading</div>\n    }\n\n    if (!this.state.brewery) {\n        return <div>No data</div>\n    }\n    return (\n            <table id=\"brewery\" className=\"table\">\n                <thead>\n                    <tr>{this.renderTableHeader()}</tr>\n                </thead>\n                <tbody>\n                    {this.renderTableData()}\n                </tbody>\n            </table>\n    );\n}\n\n}\nexport default FetchOpenBreweryAPI"]},"metadata":{},"sourceType":"module"}