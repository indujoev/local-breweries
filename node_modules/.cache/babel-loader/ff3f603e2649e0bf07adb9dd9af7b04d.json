{"ast":null,"code":"var _jsxFileName = \"/Users/indupoudel/Documents/00-Web Development Projects/REACT/local-breweries/src/components/FetchBrewery.js\";\nimport React from 'react';\nimport logo from \"../logo.svg\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass FetchBrewery extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://api.openbrewerydb.org/breweries/\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      brewery: data,\n      loading: false\n    });\n  }\n\n  renderTableData() {\n    return this.state.brewery.map((brewery, index) => {\n      const id = brewery.id,\n            name = brewery.name,\n            brewery_type = brewery.brewery_type,\n            street = brewery.street,\n            city = brewery.city,\n            state = brewery.state,\n            postal_code = brewery.postal_code,\n            website_url = brewery.website_url; //destructuring\n\n      return React.createElement(\"tr\", {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, brewery_type), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, street, \" \", city, \" \", state, \" \", postal_code), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, website_url));\n    });\n  }\n\n  renderTableHeader() {\n    let header = Object.keys(this.state.brewery[0]); //const { id, name, brewery_type, website_url } = header ;//destructuring\n\n    return header.map((key, index) => {\n      return React.createElement(\"th\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  }\n\n  renderbreweryAddress() {}\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"loading\");\n    }\n\n    if (!this.state.brewery) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"No data\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      class: \"navbar navbar-light bg-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"navbar-brand\",\n      href: \"./\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      width: \"40\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), \" Breweries\")), React.createElement(\"table\", {\n      id: \"brewery\",\n      class: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.renderTableHeader())), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.renderTableData())));\n  }\n\n}\n\nexport default FetchBrewery;","map":{"version":3,"sources":["/Users/indupoudel/Documents/00-Web Development Projects/REACT/local-breweries/src/components/FetchBrewery.js"],"names":["React","FetchBrewery","Component","state","loading","componentDidMount","url","response","fetch","data","json","setState","brewery","renderTableData","map","index","id","name","brewery_type","street","city","postal_code","website_url","renderTableHeader","header","Object","keys","key","toUpperCase","renderbreweryAddress","render","logo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from '../logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass FetchBrewery extends React.Component {\n    state = {\n        loading: true\n    };\n\n    async componentDidMount() {\n        const url = \"https://api.openbrewerydb.org/breweries/\";\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({ brewery: data, loading: false });\n    }\n\n    renderTableData() {\n        return this.state.brewery.map((brewery, index) => {\n            const { id, name, brewery_type, street, city, state, postal_code, website_url } = brewery; //destructuring\n            return (\n                <tr key={id}>\n                    <td>{name}</td>\n                    <td>{brewery_type}</td>\n                    <td>{street} {city} {state} {postal_code}</td>\n                    <td>{website_url}</td>\n                </tr>\n            )\n\n        })\n    }\n\n    renderTableHeader() {\n        let header = Object.keys(this.state.brewery[0])\n        //const { id, name, brewery_type, website_url } = header ;//destructuring\n        return header.map((key, index) => {\n            return <th key={index}>{key.toUpperCase()}</th>\n        })\n    }\n    renderbreweryAddress() {\n\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <div>loading</div>\n        }\n\n        if (!this.state.brewery) {\n            return <div>No data</div>\n        }\n        return (\n            <div>\n                <nav class=\"navbar navbar-light bg-light\">\n                    <a class=\"navbar-brand\" href=\"./\">\n                        <img src={logo} alt=\"logo\" width=\"40\" /> Breweries\n                    </a>\n                </nav>\n                <table id=\"brewery\" class=\"table\">\n                    <thead>\n                        <tr>{this.renderTableHeader()}</tr>\n                    </thead>\n                    <tbody>\n                        {this.renderTableData()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default FetchBrewery"]},"metadata":{},"sourceType":"module"}