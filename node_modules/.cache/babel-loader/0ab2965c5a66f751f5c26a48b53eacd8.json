{"ast":null,"code":"var _jsxFileName = \"/Users/indupoudel/Documents/00-Web Development Projects/REACT/local-breweries/src/components/FetchBrewery.js\";\nimport React from 'react';\n\nclass FetchBrewery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n\n    this.getKeys = function () {\n      return Object.keys(this.props.brewery[0]);\n    };\n\n    this.getTableHeader = this.getTableHeader.bind(this);\n    this.getRowData = this.getRowData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n  }\n\n  async componentDidMount() {\n    const url = \"https://api.openbrewerydb.org/breweries/\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      brewery: data,\n      loading: false\n    });\n  }\n\n  getTableHeader() {\n    var keys = this.getKeys();\n    return keys.map((key, index) => {\n      return React.createElement(\"th\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, key.toUpperCase());\n    });\n  }\n\n  getRowData() {\n    return this.state.brewery.map((brewery, index) => {\n      const id = brewery.id,\n            name = brewery.name,\n            brewery_type = brewery.brewery_type,\n            street = brewery.street,\n            city = brewery.city,\n            state = brewery.state,\n            postal_code = brewery.postal_code,\n            website_url = brewery.website_url; //destructuring\n\n      return React.createElement(\"tr\", {\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, brewery_type), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, street, \" \", city, \" \", state, \" \", postal_code), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, website_url));\n    });\n  }\n\n  renderRow() {}\n\n  getBreweryAddress() {}\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"loading\");\n    }\n\n    if (!this.state.brewery) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"No data\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Breweries\"), React.createElement(\"table\", {\n      id: \"brewery\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.getTableHeader())), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.getRowData())));\n  }\n\n}\n\nexport default FetchBrewery;","map":{"version":3,"sources":["/Users/indupoudel/Documents/00-Web Development Projects/REACT/local-breweries/src/components/FetchBrewery.js"],"names":["React","FetchBrewery","Component","constructor","props","state","loading","getKeys","Object","keys","brewery","getTableHeader","bind","getRowData","componentDidMount","url","response","fetch","data","json","setState","map","key","index","toUpperCase","id","name","brewery_type","street","city","postal_code","website_url","renderRow","getBreweryAddress","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass FetchBrewery extends React.Component {\n    constructor(props){\n        super(props);\n        this.getTableHeader = this.getTableHeader.bind(this);\n        this.getRowData = this.getRowData.bind(this);\n        this.getKeys = this.getKeys.bind(this);\n    }\n    state= {\n        loading: true\n    };\n    async componentDidMount() {\n        const url = \"https://api.openbrewerydb.org/breweries/\";\n        const response = await fetch (url);\n        const data = await response.json();\n        this.setState({brewery: data, loading: false });\n    }\n    \n    getTableHeader() {\n        var keys = this.getKeys();\n return keys.map((key, index)=>{\n return <th key={key}>{key.toUpperCase()}</th>\n })\n   }\n    getKeys = function(){\n        return Object.keys(this.props.brewery[0]);\n    }\n\n    getRowData() {\n      return this.state.brewery.map((brewery, index) => {\n         const { id, name, brewery_type, street, city, state, postal_code, website_url } = brewery; //destructuring\n         return (\n            <tr key={id}>\n               <td>{id}</td>\n               <td>{name}</td>\n               <td>{brewery_type}</td>\n               <td>{street} {city} {state} {postal_code}</td>\n               <td>{website_url}</td>\n            </tr>\n         )\n        \n      })\n   }\n   renderRow() {\n\n   }\n\n   \n   getBreweryAddress() {\n\n   }\n\n    render() {\n        if (this.state.loading) {\n            return <div>loading</div>\n        }\n\n        if (!this.state.brewery) {\n            return <div>No data</div>\n        }\n        return (\n            <div>\n                <h1 id=\"title\">Breweries</h1>\n                <table id=\"brewery\">\n                    <thead>\n                        <tr>{this.getTableHeader()}</tr>\n                    </thead>\n                    <tbody>\n                        {this.getRowData()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default FetchBrewery"]},"metadata":{},"sourceType":"module"}